{"version":3,"sources":["state/item/reducer.tsx","state/item/context.tsx","state/pagequery/page.tsx","constant/api-path.tsx","config/index.ts","api/api-client.tsx","api/item-service.tsx","component/itemImgSrc.tsx","component/itemModal.tsx","component/itemTable.tsx","screen/main/Main.tsx","component/itemImg.tsx","component/itemInfiniteList.tsx","component/mainCarousel.tsx","screen/main/Main2.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ItemsInitialState","items","ItemContext","React","createContext","useItemContext","useContext","ItemListProvider","children","useState","itemsState","Provider","value","initialPageParam","index","size","count","useQueryPagingStatus","page","pageIndex","setPageIndex","pageSize","setPageSize","pageCount","setPageCount","APIEndPoints","get","window","validateStatus","status","authorizedHttpClient","axiosInstance","this","axios","create","baseURL","EnvConfig","apiBaseUrl","headers","Accept","timeout","path","params","result","HttpClient","handleResponse","translateAxiosError","payload","config","post","delete","put","patch","response","data","e","code","Error","message","console","log","item","parseItem","_","pickBy","identity","Promise","resolve","id","ItemImgSrc","require","forwardRef","itemImageSrc","selectItemHandler","itemSrc","useEffect","wrapperStyle","minHeight","onLoad","loading","src","preview","layout","labelCol","span","wrapperCol","validateMessages","required","types","email","number","range","ItemModal","props","Form","useForm","form","visible","handleOk","confirmLoading","handleCancel","setFields","name","description","quantity","imageSrc","getFieldsValue","onFinish","values","title","onOk","onCancel","Item","hidden","label","rules","type","min","TextArea","ItemTable","itemList","itemContext","firstLoad","setFirstLoad","hasMore","setHasMore","allItems","setItems","selectedItem","setSelectedItem","isLoading","setIsLoading","isAdd","setIsAdd","setVisible","setConfirmLoading","columns","dataIndex","key","render","text","sorter","a","b","onClick","showModal","deleteItem","ItemService","getItems","createItem","editItem","onLoadMore","then","itemRes","length","loadingItems","i","pop","push","loadAllItems","undefined","pagination","position","dataSource","Main2","justify","ItemImg","localStorage","getItem","dataImage","alt","currentTarget","classList","contains","remove","add","itemListStyle","margin","maxWidth","ItemInfiniteList","tagList","isEditable","selected","setSelected","selectedItems","setSelectedItems","map","getItemPaged","maxPages","rows","filter","align","pageStart","loadMore","loader","className","grid","column","gutter","xs","sm","md","lg","xl","xxl","style","bordered","renderItem","contentStyle","color","lineHeight","textAlign","background","top","left","display","justifyContent","alignItems","MainCarousel","Main","tags","SubMenu","Menu","Header","Layout","Content","Footer","Sider","states","url","component","plugins","pushStateLocationPlugin","App","featureToggleOAUTHGoogle","loggedIn","setLoggedIn","height","overflow","clientId","buttonText","onSuccess","onFailure","cookiePolicy","theme","mode","defaultSelectedKeys","padding","width","defaultOpenKeys","icon","UserOutlined","LaptopOutlined","NotificationOutlined","rel","href","crossOrigin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"0SAGO,IAAMA,EAA+B,CACxCC,MAAO,ICAX,IAAMC,EAAcC,IAAMC,cAAyBJ,GAC7CK,EAAiB,kBAAiBC,qBAAWJ,IAUtCK,EAAmB,SAAC,GAI1B,IAHHC,EAGE,EAHFA,SAGE,EAC6BC,mBAAST,GADtC,mBACKU,EADL,UAGF,OACI,cAACR,EAAYS,SAAb,CAAsBC,MAAOF,EAA7B,SACKF,K,qEChBPK,EAAmB,CACrBC,MAAO,EACPC,KAAM,IACNC,MAAO,GAWIC,EARc,WAA8B,IAA7BC,EAA4B,uDAArBL,EAAqB,EACpBJ,mBAASS,EAAKJ,OADM,mBAC/CK,EAD+C,KACpCC,EADoC,OAEtBX,mBAASS,EAAKH,MAFQ,mBAE/CM,EAF+C,KAErCC,EAFqC,OAGpBb,mBAASS,EAAKF,OAHM,mBAG/CO,EAH+C,KAGpCC,EAHoC,KAKxD,MAAO,CAAEL,YAAWE,WAAUE,YAAWH,eAAcE,cAAaE,iB,oCCnBzDC,EACH,QADGA,EAEF,S,kBCcI,M,mGARP,OAAOC,cAAIC,OAAQ,oBAAqB,KANpC,8B,+CAUJ,OAAOD,cAAIC,OAAQ,mCAAoC,KAT7B,S,MCOrBC,EAAiB,SAACC,GAC7B,OAAOA,GAAU,KAAOA,EAAS,KA4FtBC,EAAuB,IAjFpC,WAGE,aAAe,yBAFLC,mBAEI,EACZC,KAAKD,cAAgBE,IAAMC,OAAO,CAChCC,QAASC,EAAUC,WACnBC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBX,iBACAY,QAAS,MAXf,yFAmBsBC,EAAcC,GAnBpC,gGAqB2BV,KAAKD,cAAcL,IAAOe,EAAM,CAAEC,WArB7D,cAqBYC,EArBZ,yBAsBaC,EAAWC,eAAeF,IAtBvC,sCAwBYC,EAAWE,oBAAX,MAxBZ,sLA6B0BL,EAAcM,EAAYC,GA7BpD,gGA+B2BhB,KAAKD,cAAckB,KAAQR,EAAMM,EAASC,GA/BrE,cA+BYL,EA/BZ,yBAgCaC,EAAWC,eAAeF,IAhCvC,sCAkCYC,EAAWE,oBAAX,MAlCZ,0LAsCsBL,EAAcO,GAtCpC,0FAwCYhB,KAAKD,cAAcmB,OAAaT,EAAMO,GAxClD,4DA0CYJ,EAAWE,oBAAX,MA1CZ,oLA+CyBL,EAAcM,EAAYC,GA/CnD,gGAiD2BhB,KAAKD,cAAcoB,IAAOV,EAAMM,EAASC,GAjDpE,cAiDYL,EAjDZ,yBAkDaC,EAAWC,eAAeF,IAlDvC,sCAoDYC,EAAWE,oBAAX,MApDZ,yLAwD2BL,EAAcM,GAxDzC,gGA0D2Bf,KAAKD,cAAcqB,MAASX,EAAMM,GA1D7D,cA0DYJ,EA1DZ,yBA2DaC,EAAWC,eAAeF,IA3DvC,sCA6DYC,EAAWE,oBAAX,MA7DZ,8IAgBI,OAAOd,KAAKD,iBAhBhB,sCAiEmCsB,GAC/B,MAAO,CAAEC,KAAMD,EAASC,QAlE5B,0CAqEqCC,GAAuB,IAChDF,EAAaE,EAAbF,SACR,MAAe,iBAAXE,EAAEC,KACG,IAAIC,MAAMF,EAAEG,SAEL,MAAZL,EACK,IAAII,MAAMJ,EAASC,MAErB,IAAIG,MAAM,yEA7ErB,MC6De,M,mOA5DgB3B,EAAqBJ,IACxCD,G,YADE4B,E,UAGSA,EAASC,K,uBACpBK,QAAQC,IAAIP,EAASC,M,kBACdD,EAASC,M,aAEd,IAAIG,MAAM,kC,6KAGMvC,G,uFACCY,EAAqBJ,IAArB,UACfD,EADe,sBACiBP,EAAKJ,MADtB,qBACwCI,EAAKH,KAD7C,sBAC+DG,EAAKF,Q,YADrFqC,E,UAGSA,EAASC,K,yCACbD,EAASC,M,aAEd,IAAIG,MAAM,kC,4KAGII,G,8EACdC,EAAYC,IAAEC,OAAOH,EAAME,IAAEE,U,SACZnC,EAAqBmB,KACxCxB,EAAmB,CAAEoC,KAAMC,I,2DAGpBI,QAAQC,W,aAEb,IAAIV,MAAM,kC,0KAGEI,G,iFACK/B,EAAqBqB,IACxC1B,EAAmB,CAAEoC,S,2DAGdK,QAAQC,W,aAEb,IAAIV,MAAM,kC,4KAGII,G,wEACpBF,QAAQC,IAAR,UAAenC,EAAf,YAAoCoC,EAAKO,K,SACnCtC,EAAqBoB,OAArB,UACCzB,EADD,eACyBoC,EAAKO,K,gCAE7BF,QAAQC,W,6KAGMlE,G,iFACE6B,EAAqBmB,KACxCxB,EAAmB,CAAExB,SAAS,CAAEuC,QAAS,M,2DAGlC0B,QAAQC,W,aAEb,IAAIV,MAAM,kC,mHC1BTY,G,OAhDOC,EAAQ,KAOanE,IAAMoE,YAAW,YAA8D,IAA3DC,EAA0D,EAA1DA,aAA0D,KAA5CC,kBAE3ChE,mBAAS+D,IAF8E,mBAE9GE,EAF8G,UAIrHC,qBAAU,cAGP,IAuBH,OACI,cAAC,IAAD,CACIC,aAAc,CAAEC,UAAW,IAC3BC,OAxBS,SAACvB,GACd,OAAOmB,GAwBHK,QAAQ,OACRC,IAAKN,EACLO,SAAS,Q,oCCzCfC,EAAS,CACXC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAIlBE,EAAmB,CACrBC,SAAU,wBACVC,MAAO,CACHC,MAAO,iCACPC,OAAQ,mCAEZA,OAAQ,CACJC,MAAO,yCAoEAC,EA1D6B,SAACC,GAAW,IAAD,EACpCC,IAAKC,UAAbC,EAD4C,oBAG3CC,EAA0DJ,EAA1DI,QAASC,EAAiDL,EAAjDK,SAAUC,EAAuCN,EAAvCM,eAAgBC,EAAuBP,EAAvBO,aAAcvC,EAASgC,EAAThC,KAHN,EAIjBpD,mBAASoD,GAJQ,6BAQnDc,qBAAU,WACNhB,QAAQC,IAAIC,GACZmC,EAAKK,UAAU,CACX,CAAEC,KAAM,KAAM1F,MAAK,OAAEiD,QAAF,IAAEA,OAAF,EAAEA,EAAMO,IAC3B,CAAEkC,KAAM,OAAQ1F,MAAK,OAAEiD,QAAF,IAAEA,OAAF,EAAEA,EAAMyC,MAC7B,CAAEA,KAAM,cAAe1F,MAAK,OAAEiD,QAAF,IAAEA,OAAF,EAAEA,EAAM0C,aACpC,CAAED,KAAM,WAAY1F,MAAK,OAAEiD,QAAF,IAAEA,OAAF,EAAEA,EAAM2C,UACjC,CAAEF,KAAM,WAAY1F,MAAK,OAAEiD,QAAF,IAAEA,OAAF,EAAEA,EAAM4C,YAErC9C,QAAQC,IAAIoC,EAAKU,oBAClB,CAAC7C,IAEJ,IAAM8C,EAAW,SAACC,GACdjD,QAAQC,IAAIoC,EAAKU,kBACjBR,EAASF,EAAKU,kBACd/C,QAAQC,IAAIgD,IAIhB,OACI,mCACI,cAAC,IAAD,2BAAU1B,GAAV,IAAkBc,KAAMA,EAAMM,KAAK,gBAAgBK,SAAUA,EAAUrB,iBAAkBA,EAAzF,SACI,eAAC,IAAD,CACIuB,MAAK,yBAAahD,QAAb,IAAaA,OAAb,EAAaA,EAAMyC,MACxBL,QAASA,EACTa,KAAMH,EACNR,eAAgBA,EAChBY,SAAUX,EALd,UAOI,cAAC,IAAKY,KAAN,CAAWV,KAAM,CAAC,MAAOW,QAAQ,EAAMC,MAAM,KAA7C,SACI,cAAC,IAAD,CAAOtG,MAAK,OAAEiD,QAAF,IAAEA,OAAF,EAAEA,EAAMO,OAExB,cAAC,IAAK4C,KAAN,CAAWV,KAAM,CAAC,QAASY,MAAM,OAAOC,MAAO,CAAC,CAAE5B,UAAU,IAA5D,SACI,cAAC,IAAD,CAAO3E,MAAK,OAAEiD,QAAF,IAAEA,OAAF,EAAEA,EAAMyC,SAExB,cAAC,IAAKU,KAAN,CAAWV,KAAM,CAAC,YAAaY,MAAM,WAAWC,MAAO,CAAC,CAAEC,KAAM,SAAUC,IAAK,IAA/E,SACI,cAAC,IAAD,MAEJ,cAAC,IAAKL,KAAN,CAAWV,KAAM,CAAC,eAAgBY,MAAM,cAAxC,SACI,cAAC,IAAMI,SAAP,CAAgBvG,KAAK,YAEzB,cAAC,IAAKiG,KAAN,CAAWV,KAAM,CAAC,YAAaY,MAAM,YAArC,SACI,cAAC,IAAD,eChElBrG,EAAmB,CACvBC,MAAO,EACPC,KAAM,IACNC,MAAO,GAIIuG,EAAsC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC9CC,EAAcpH,IAD+C,EAEiBY,EAAqBJ,GAA5EU,GAFsC,EAE3DJ,UAF2D,EAEhDE,SAFgD,EAEtCE,WAAsCC,GAFA,EAE3BJ,aAF2B,EAEbE,YAFa,EAEAE,cAFA,EAGjCf,oBAAS,GAHwB,mBAG5DiH,EAH4D,KAGjDC,EAHiD,OAIrClH,oBAAS,GAJ4B,mBAI5DmH,EAJ4D,KAInDC,EAJmD,KAK7DC,EAAoBN,EALyC,EAMzC/G,mBAASqH,GANgC,mBAM5D7H,EAN4D,KAMrD8H,EANqD,OAO3BtH,qBAP2B,mBAO5DuH,EAP4D,KAO9CC,EAP8C,OAQjCxH,oBAAS,GARwB,mBAQ5DyH,EAR4D,KAQjDC,EARiD,OASzC1H,oBAAS,GATgC,mBAS5D2H,EAT4D,KASrDC,EATqD,OAYrC5H,oBAAS,GAZ4B,mBAY5DwF,EAZ4D,KAYnDqC,EAZmD,OAavB7H,oBAAS,GAbc,mBAa5D0F,EAb4D,KAa5CoC,EAb4C,KAgB7DC,GAAU,CACd,CACE3B,MAAO,OACP4B,UAAW,OACXC,IAAK,OACLC,OAAQ,SAACC,GAAD,OAAkB,4BAAIA,MAEhC,CACE/B,MAAO,cACP4B,UAAW,cACXC,IAAK,eAEP,CACE7B,MAAO,QACP4B,UAAW,WACXC,IAAK,WACLC,OAAQ,SAAClC,GAAD,OACN,cAAC,EAAD,CAAYjC,aAAciC,MAG9B,CACEI,MAAO,WACP6B,IAAK,WACLD,UAAW,WACXI,OAAQ,SAACC,EAAUC,GAAX,OAAwBD,EAAEtC,SAAWuC,EAAEvC,WAEjD,CACEK,MAAO,SACP6B,IAAK,SACLC,OAAQ,SAAC9E,GAAD,OACN,eAAC,IAAD,CAAO9C,KAAK,SAAZ,UACE,mBAAGiI,QAAS,kBAAMC,GAAUpF,IAA5B,kBACA,mBAAGmF,QAAS,kBAAME,GAAWrF,IAA7B,0BAMFqF,GAAU,uCAAG,WAAOrF,GAAP,SAAAiF,EAAA,sEACXK,EAAYD,WAAWrF,GADZ,mBAEjBkE,EAFiB,SAEDoB,EAAYC,WAFX,6EAAH,sDAWVH,GAAY,SAACpF,GACjBwE,GAAS,GACTJ,EAAgBpE,GAChByE,GAAW,IAGPpC,GAAQ,uCAAG,WAAOrC,GAAP,SAAAiF,EAAA,yDACfP,GAAkB,GADH,UAKTH,EALS,gCAMLe,EAAYE,WAAWxF,GANlB,6CAQLsF,EAAYG,SAASzF,GARhB,mBAWbkE,EAXa,UAWGoB,EAAYC,WAXf,6FAgBfd,GAAW,GACXC,GAAkB,GAjBH,0DAAH,sDA0BRgB,GAAU,uCAAG,sBAAAT,EAAA,0DACbZ,EADa,wDAEjBC,GAAa,GAFI,SAGXgB,EAAYC,WACfI,MAAK,SAACC,GACL9F,QAAQC,IAAI6F,GACRA,IACF1B,EAAS0B,GACTtB,GAAa,OARF,2CAAH,qDAsChB,OAbAxD,qBAAU,WAEJuD,GAAaN,IAAYF,IAC7BC,GAAa,GACb4B,QACC,IAEH5E,qBAAU,WACJ8C,EAAYxH,OAASwH,EAAYxH,MAAMyJ,OAAS,GAAG7B,GAAW,GApB/C,WAEnB,IADA,IAAM8B,EAAwB,GACrBC,EAAI,EAAGA,EAAInC,EAAYxH,MAAMyJ,OAAQE,IAAK,CACjD,IAAM/F,EAAO4D,EAAYxH,MAAM4J,MACzBhG,GACJ8F,EAAaG,KAAKjG,GAGlB8F,EAAaD,QAAQ3B,EAAS,GAAD,mBAAK9H,GAAU0J,IAChDnI,EAAaD,EAAY,GAYzBwI,KACC,CAACtC,IAIF,gCACE,cAAC,IAAD,CAAQL,KAAK,UAAU4B,QA9EH,WACtBX,GAAS,GACTJ,OAAgB+B,GAChB1B,GAAW,IA2ET,iBAGA,cAAC,IAAD,CACEE,QAASA,GACTyB,WAAY,CAAEC,SAAU,CAAC,UAAW,iBACpCC,WAAYlK,IAEd,cAAC,EAAD,CACE4D,KAAMmE,EACN/B,QAASA,EACTC,SAAUA,GACVC,eAAgBA,EAChBC,aA3De,WACnBzC,QAAQC,IAAI,yBACZ0E,GAAW,UChFA8B,EAjBS,WAAO,IAAD,EACD3J,mBAAmB,IADlB,gCAECA,mBAAkB,KAFnB,mBAEpBR,EAFoB,UAM5B,OACE,cAAC,EAAD,UACE,cAAC,IAAD,CAAKoK,QAAQ,SAAb,SACE,cAAC,IAAD,CAAKjF,KAAK,KAAV,SACE,cAAC,EAAD,CAAWoC,SAAUvH,W,SCwEhBqK,GAhGOhG,EAAQ,KAOUnE,IAAMoE,YAAW,YAAsD,IAAnDV,EAAkD,EAAlDA,KAAMY,EAA4C,EAA5CA,kBAA4C,EAExEhE,mBAAS8J,aAAaC,QAAQ3G,EAAKO,KAFqC,mBAEnGqG,EAFmG,aAI5EhK,mBAASgK,GAAwB5G,EAAK4C,WAJsC,mBAInG/B,EAJmG,UAM1GC,qBAAU,cAGP,IAsDH,OACI,cAAC,IAAD,CACIC,aAAc,CAAEC,UAAW,IAC3BC,OAvDS,SAACvB,GACd,OAAOM,EAAK4C,UAuDR1B,QAAQ,OACR2F,IAAK7G,EAAKyC,KACVtB,IAAKN,EACLO,SAAS,EACT+D,QAAS,SAACzF,GAEFkB,IACIlB,EAAEoH,cAAcC,UAAUC,SAAS,aACnCtH,EAAEoH,cAAcC,UAAUE,OAAO,YACjCrG,EAAkBZ,GAAM,KAExBN,EAAEoH,cAAcC,UAAUG,IAAI,YAC9BtG,EAAkBZ,Y,kBCjFpCmH,GAAgC,CAClCC,OAAQ,OACRC,SAAU,SAGRrK,GAAmB,CACrBC,MAAO,EACPC,KAAM,IACNC,MAAO,GAiJImK,GAzImC,SAAC,GAA2C,IAA1C3D,EAAyC,EAAzCA,SAAU4D,EAA+B,EAA/BA,QAA+B,IAAtBC,kBAAsB,SACnF5D,EAAcpH,IADqE,EAEvDI,oBAAS,GAF8C,mBAElFiH,EAFkF,KAEvEC,EAFuE,OAGvDlH,oBAAS,GAH8C,mBAGlFyH,EAHkF,KAGvEC,EAHuE,OAILlH,EAAqBJ,IAAjGM,EAJiF,EAIjFA,UAAWE,EAJsE,EAItEA,SAAUE,EAJ4D,EAI5DA,UAAWH,EAJiD,EAIjDA,aAA2BI,GAJsB,EAInCF,YAJmC,EAItBE,cAG7DsG,EAAoBN,EAP+D,EAS3D/G,oBAAS,GATkD,mBASlFmH,EATkF,KASzEC,EATyE,OAU/DpH,mBAASqH,GAVsD,mBAUlF7H,EAVkF,KAU3E8H,EAV2E,OAWjEtH,mBAAS2K,GAXwD,gCAYzD3K,mBAAgB,KAZyC,mBAYlF6K,EAZkF,KAYxEC,EAZwE,OAa/C9K,mBALR,IARuD,mBAalF+K,EAbkF,KAanEC,EAbmE,KAiBzF9G,qBAAU,WAEHuD,GAAaN,IAAYF,IAC5BC,GAAa,GACb4B,QACD,IAEH5E,qBAAU,WACF8C,EAAYxH,OAASwH,EAAYxH,MAAMyJ,OAAS,GAAG7B,GAAW,GAClEkC,OACD,CAACtC,IAEJ9C,qBAAU,WACN1E,EAAMyL,KAAI,SAAC7H,EAAM+F,GAEb2B,EAAY,GAAD,mBAAKD,GAAL,CAAe,cAAC,IAAD,CAAKlG,KAAM,IAAX,SAAgB,cAAC,EAAD,CAASvB,KAAOA,EAAOY,kBAAmBA,eAEzF,CAACxE,IAGJ,IAAM8J,GAAe,WAEjB,IADA,IAAMJ,EAAwB,GACrBC,EAAI,EAAGA,EAAInC,EAAYxH,MAAMyJ,OAAQE,IAAK,CAC/C,IAAM/F,EAAO4D,EAAYxH,MAAM4J,MACzBhG,GACF8F,EAAaG,KAAKjG,GAGtB8F,EAAaD,QAAQ3B,EAAS,GAAD,mBAAK9H,GAAU0J,IAChDnI,EAAaD,EAAY,IAGvBgI,GAAU,uCAAG,4BAAAT,EAAA,0DACZZ,EADY,wDAEfC,GAAa,GACPjH,EAAkB,CACpBF,MAAOO,EACPT,MAAOK,EACPJ,KAAMM,GANK,SAQT8H,EAAYwC,aAAazK,GAC1BsI,MAAK,SAACC,GACH,GAAGA,EAAS,CAAC,IACDmC,EAAmBnC,EAAnBmC,SAAUC,EAASpC,EAAToC,KACdA,EAAKnC,SACL7B,GAAW,GACXE,EAAS,GAAD,mBAAK9H,GAAL,YAAe4L,KACvBzK,EAAaD,EAAY,GACzBgH,GAAa,IAEdyD,GAAYzK,GACX0G,GAAW,OAnBZ,2CAAH,qDA0BVpD,GAAiB,uCAAG,WAAOuD,GAAP,yBAAAc,EAAA,4HAEZ2C,EAAiB,YAAKD,EAAcM,QAAO,SAAAjI,GAAI,OAAIA,EAAKO,KAAO4D,EAAa5D,QAFhE,6CAIZqH,EAAiB,GAAD,mBAAMD,GAAN,CAAqBxD,KAJzB,2CAAH,sDAoBvB,OACI,cAAC,IAAD,CAAK+D,MAAM,SAAS1B,QAAQ,SAA5B,SACI,cAAC,IAAD,UACI,eAAC,IAAD,CAAKA,QAAQ,SAAb,UACI,cAAC,IAAD,CAAQpD,QAASoE,EAAYrC,QAhBtB,WACnBrF,QAAQC,IAAI,oBAAqB4H,IAerB,mBACA,cAAC,IAAD,CACIQ,UAAW,EACXC,SAAU1C,GACV3B,QAASA,EACTsE,OAAQ,qBAAKC,UAAU,SAAf,wBAA6B,GAJzC,SAMI,cAAC,IAAD,CACIC,KAAM,CACFC,OAAQ,EACRC,OAAQ,EACRC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,IAAK,GAETC,MAAO7B,GACP8B,UAAU,EACV3C,WAAYlK,EACZ8M,WAAY,SAAAlJ,GAAI,OAChB,eAAC,IAAKmD,KAAN,WACI,uBACA,uBACA,cAAC,EAAD,CAASnD,KAAMA,EAAMY,kBAAmBA,KACxC,yBAJYZ,EAAKO,iB,UChJ3C4I,GAA8B,CAClCnI,UAAW,QACXoI,MAAO,OACPC,WAAY,QACZC,UAAW,SACXC,WAAY,UACZC,IAAK,MACLC,KAAM,MACNC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAaCC,GAVgB,WAC7B,OACE,cAAC,KAAD,UACE,8BACE,oBAAIb,MAAOG,GAAX,qECiBOW,GApBQ,WAAO,IAAD,EACAlN,mBAAmB,IADnB,mBACnBmN,EADmB,aAEEnN,mBAAkB,KAFpB,mBAEnBR,EAFmB,UAI3B,OACE,eAAC,EAAD,WACE,cAAC,IAAD,CAAKoK,QAAQ,SAAb,SACE,cAAC,IAAD,CAAKjF,KAAK,KAAV,SACE,cAAC,GAAD,QAGJ,cAAC,IAAD,CAAKiF,QAAQ,SAAb,SACE,cAAC,IAAD,CAAKjF,KAAK,KAAV,SACE,cAAC,GAAD,CAAkBgG,QAASwC,EAAMpG,SAAUvH,Y,0FCV7C4N,GAAYC,KAAZD,QACAE,GAAmCC,KAAnCD,OAAQE,GAA2BD,KAA3BC,QAASC,GAAkBF,KAAlBE,OAAQC,GAAUH,KAAVG,MAG3BC,GAAS,CACb,CACE9H,KAAM,OACN+H,IAAK,IACLC,UAAWX,GAEb,CACErH,KAAM,QACN+H,IAAK,QACLC,UAAWlE,KAITmE,GAAU,CAACC,2BA8FFC,GA3FO,WAAO,IAAD,EACFhO,mBAAmB,IADjB,gCAECA,mBAAkB,KAFnB,gCAIMA,oBAASuC,EAAO0L,2BAJtB,mBAInBC,EAJmB,KAITC,EAJS,KAe1B,OACE,qCACE,eAAC,KAAD,CAAQ3H,OAAQ0H,EAAU9B,MAAO,CAAEgC,OAAQ,QAASC,SAAU,QAA9D,UACE,cAAC,IAAD,CAAMjC,MAAO,CAAEgC,OAAQ,QAAS9C,MAAM,SAAS1B,QAAQ,SAAvD,SACE,cAAC,IAAD,UACE,cAAC,KAAD,qCAGJ,cAAC,IAAD,CAAK0B,MAAM,SAAS1B,QAAQ,SAA5B,SACE,cAAC,IAAD,UACE,cAAC,eAAD,CACE0E,SAAS,2EACTC,WAAW,QACXC,UAtBkB,SAAC5L,GAC7BuL,GAAY,GACZjL,QAAQC,IAAIP,IAqBF6L,UAnBkB,SAAC7L,GAC7BuL,GAAY,GACZjL,QAAQC,IAAIP,IAkBF8L,aAAc,8BAMtB,eAAC,KAAD,CAAQlI,QAAS0H,EAAjB,UACE,eAACZ,GAAD,CAAQ5B,UAAU,SAAlB,UACE,qBAAKA,UAAU,SACf,cAAC,KAAD,CAAMiD,MAAM,OAAOC,KAAK,aAAaC,oBAAqB,CAAC,KAA3D,SACE,cAAC,KAAKtI,KAAN,kBAAe,UAGnB,eAACiH,GAAD,CAASpB,MAAO,CAAE0C,QAAS,UAA3B,UACE,eAAC,KAAD,CAAY1C,MAAO,CAAE5B,OAAQ,UAA7B,UACE,cAAC,KAAWjE,KAAZ,mBACA,cAAC,KAAWA,KAAZ,mBACA,cAAC,KAAWA,KAAZ,qBAEF,eAAC,KAAD,CAAQmF,UAAU,yBAAyBU,MAAO,CAAE0C,QAAS,UAA7D,UACE,cAACpB,GAAD,CAAOhC,UAAU,yBAAyBqD,MAAO,IAAjD,SACE,eAAC,KAAD,CACEH,KAAK,SACLC,oBAAqB,CAAC,KACtBG,gBAAiB,CAAC,QAClB5C,MAAO,CAAEgC,OAAQ,QAJnB,UAME,eAAChB,GAAD,CAAoB6B,KAAM,cAACC,GAAA,EAAD,IAAkB9I,MAAM,WAAlD,UACE,cAAC,KAAKG,KAAN,qBAAe,KACf,cAAC,KAAKA,KAAN,qBAAe,KACf,cAAC,KAAKA,KAAN,qBAAe,KACf,cAAC,KAAKA,KAAN,qBAAe,OAJJ,QAMb,eAAC6G,GAAD,CAAoB6B,KAAM,cAACE,GAAA,EAAD,IAAoB/I,MAAM,WAApD,UACE,cAAC,KAAKG,KAAN,qBAAe,KACf,cAAC,KAAKA,KAAN,qBAAe,KACf,cAAC,KAAKA,KAAN,qBAAe,KACf,cAAC,KAAKA,KAAN,qBAAe,OAJJ,QAMb,eAAC6G,GAAD,CAAoB6B,KAAM,cAACG,GAAA,EAAD,IAA0BhJ,MAAM,WAA1D,UACE,cAAC,KAAKG,KAAN,qBAAe,KACf,cAAC,KAAKA,KAAN,sBAAe,MACf,cAAC,KAAKA,KAAN,sBAAe,MACf,cAAC,KAAKA,KAAN,sBAAe,QAJJ,aAQjB,cAACiH,GAAD,CAASpB,MAAO,CAAE0C,QAAS,SAAU1K,UAAW,KAAhD,SACE,eAAC,WAAD,CAAU0J,QAASA,GAASH,OAAQA,GAApC,UACE,sBAAM0B,IAAI,WAAWC,KAAK,+BAA+BC,YAAY,oBACrE,cAAC,SAAD,eAKR,cAAC9B,GAAD,CAAQrB,MAAO,CAAEM,UAAW,UAA5B,2DC/GO8C,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB3G,MAAK,YAAkD,IAA/C4G,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAAS9H,OACP,cAAC,IAAM+H,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BX,O","file":"static/js/main.2caf09f2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { ItemAction, ItemActionTypes, ItemState } from \"./action\"\r\n\r\nexport const ItemsInitialState: ItemState = {\r\n    items: [\r\n    ],\r\n}\r\n\r\nexport function ItemReducer(state: ItemState, action: ItemAction): ItemState {\r\n    switch (action.type) {\r\n        case ItemActionTypes.ADD_ITEM:\r\n            return { items: [...state.items, { ...action.item }] };\r\n        case ItemActionTypes.REMOVE_ITEM:\r\n            return { items: [...state.items, { ...action.item }] };\r\n        default:\r\n            return { items: [...state.items] };\r\n    }\r\n}","import React, { useContext, useState } from \"react\";\r\nimport { ItemState } from \"./action\";\r\nimport { ItemsInitialState } from \"./reducer\";\r\n\r\nconst ItemContext = React.createContext<ItemState>(ItemsInitialState);\r\nconst useItemContext = ():ItemState  => useContext(ItemContext);\r\n\r\nexport const useItemListState = (): ItemState => {\r\n    const context = React.useContext(ItemContext);\r\n    if (undefined === context) {\r\n        throw new Error(\"Please use within ItemListStateProvider\");\r\n    }\r\n    return context;\r\n};\r\n\r\nexport const ItemListProvider = ({\r\n    children\r\n}: {\r\n    children: React.ReactNode;\r\n}) => {\r\n    const [itemsState, setItems] = useState(ItemsInitialState);\r\n\r\n    return (\r\n        <ItemContext.Provider value={itemsState}>\r\n            {children}\r\n        </ItemContext.Provider>\r\n    );\r\n};\r\n\r\nexport default ItemContext;\r\nexport { useItemContext }\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport interface PageParam {\r\n    index: number,\r\n    size: number,\r\n    count: number,\r\n}\r\n\r\nconst initialPageParam = {\r\n    index: 0,\r\n    size: 100,\r\n    count: 0,\r\n}\r\n\r\nconst useQueryPagingStatus = (page = initialPageParam) => {\r\n    const [pageIndex, setPageIndex] = useState(page.index);\r\n    const [pageSize, setPageSize] = useState(page.size);\r\n    const [pageCount, setPageCount] = useState(page.count);\r\n\r\n  return { pageIndex, pageSize, pageCount, setPageIndex, setPageSize, setPageCount };\r\n}\r\n\r\nexport default useQueryPagingStatus;","export const APIEndPoints = {\r\n    item: \"/item\",\r\n    items: \"/items\",\r\n}","import { get } from \"lodash\";\r\n\r\nconst api = \"http://localhost:3001/api\";\r\nconst featureToggle_OauthGoogle = true;\r\n\r\nclass Config {\r\n    public get apiBaseUrl(): string {\r\n        //return  process.env.API || api2 || get(window, \"_env.API_BASE_URL\", \"\");\r\n        return get(window, \"_env.API_BASE_URL\", \"\") || api;\r\n    }\r\n    public get featureToggleOAUTHGoogle(): boolean {\r\n        //return  process.env.API || api2 || get(window, \"_env.API_BASE_URL\", \"\");\r\n        return get(window, \"_env.FEATURE_TOGGLE_OAUTH_GOOGLE\", \"\") || featureToggle_OauthGoogle;\r\n    }\r\n}\r\n\r\nexport default new Config();\r\n","// eslint-disable-next-line max-classes-per-file\r\nimport axios, { AxiosError, AxiosInstance, AxiosResponse, AxiosRequestConfig } from \"axios\";\r\nimport { StatusCodes } from \"http-status-codes\";\r\nimport _ from \"lodash\";\r\nimport EnvConfig from \"../config\";\r\n\r\nexport type ApiService<P, R> = (payload?: P) => Promise<ApiResponse<R>>;\r\n\r\nexport const headersForBulkOperation = { \"pph-action\": \"bulk\" };\r\n\r\nexport const validateStatus = (status: number): boolean => {\r\n  return status >= 200 && status < 300;\r\n};\r\n\r\nexport interface ApiResponse<T> {\r\n  data?: T;\r\n}\r\n\r\nexport type RequestParam = {\r\n  [key: string]: any;\r\n};\r\n\r\nexport class HttpClient {\r\n  protected axiosInstance: AxiosInstance;\r\n\r\n  constructor() {\r\n    this.axiosInstance = axios.create({\r\n      baseURL: EnvConfig.apiBaseUrl,\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      validateStatus,\r\n      timeout: 20000\r\n    });\r\n  }\r\n\r\n  public get axios(): AxiosInstance {\r\n    return this.axiosInstance;\r\n  }\r\n\r\n  public async get<T>(path: string, params?: RequestParam): Promise<ApiResponse<T>> {\r\n    try {\r\n      const result = await this.axiosInstance.get<T>(path, { params });\r\n      return HttpClient.handleResponse(result);\r\n    } catch (e) {\r\n      throw HttpClient.translateAxiosError(e);\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line no-shadow\r\n  public async post<T, P>(path: string, payload: P, config?: AxiosRequestConfig): Promise<ApiResponse<T>> {\r\n    try {\r\n      const result = await this.axiosInstance.post<P>(path, payload, config);\r\n      return HttpClient.handleResponse(result);\r\n    } catch (e) {\r\n      throw HttpClient.translateAxiosError(e);\r\n    }\r\n  }\r\n\r\n  public async delete(path: string, config?: AxiosRequestConfig): Promise<void> {\r\n    try {\r\n      await this.axiosInstance.delete<void>(path, config);\r\n    } catch (e) {\r\n      throw HttpClient.translateAxiosError(e);\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line no-shadow\r\n  public async put<T, P>(path: string, payload: P, config?: AxiosRequestConfig): Promise<ApiResponse<T>> {\r\n    try {\r\n      const result = await this.axiosInstance.put<T>(path, payload, config);\r\n      return HttpClient.handleResponse(result);\r\n    } catch (e) {\r\n      throw HttpClient.translateAxiosError(e);\r\n    }\r\n  }\r\n\r\n  public async patch<T, P>(path: string, payload: P): Promise<ApiResponse<T>> {\r\n    try {\r\n      const result = await this.axiosInstance.patch<T>(path, payload);\r\n      return HttpClient.handleResponse(result);\r\n    } catch (e) {\r\n      throw HttpClient.translateAxiosError(e);\r\n    }\r\n  }\r\n\r\n  private static handleResponse<T>(response: AxiosResponse): ApiResponse<T> {\r\n    return { data: response.data as T };\r\n  }\r\n\r\n  private static translateAxiosError(e: AxiosError): Error {\r\n    const { response } = e;\r\n    if (e.code === \"ECONNABORTED\") {\r\n      return new Error(e.message);\r\n    }\r\n    if (response != null) {\r\n      return new Error(response.data);\r\n    }\r\n    return new Error(\"Unable to contact the server at this time. Please try again later\");\r\n  }\r\n}\r\n\r\nexport const authorizedHttpClient = new HttpClient();","import _ from \"lodash\";\r\nimport { APIEndPoints } from \"../constant/api-path\";\r\nimport { IItem } from \"../model/item\";\r\nimport { PageParam } from \"../state/pagequery/page\";\r\nimport { authorizedHttpClient } from \"./api-client\";\r\n\r\ntype GetItemsResponse = {\r\n    rows: IItem[],\r\n}\r\ntype GetItemResponse = {\r\n    count: number,\r\n    maxPages: number,\r\n    rows: IItem[],\r\n}\r\ntype CreateItemPayload = {\r\n    item: Partial<IItem>\r\n}\r\ntype CreateItemsPayload = {\r\n    items: IItem[]\r\n}\r\n\r\nclass ItemService {\r\n    public async getItems(): Promise<any> {\r\n        const response = await authorizedHttpClient.get<any>(\r\n            APIEndPoints.items\r\n        )\r\n        if(response && response.data) {\r\n            console.log(response.data);\r\n            return response.data;\r\n        }\r\n        throw new Error(\"Get item service returns null.\");\r\n    }\r\n\r\n    public async getItemPaged(page: PageParam): Promise<GetItemResponse> {\r\n        const response = await authorizedHttpClient.get<GetItemResponse>(\r\n            `${ APIEndPoints.item }?pageIndex=${page.index}&pageSize=${page.size}&pageCount=${page.count}`\r\n        )\r\n        if(response && response.data) {\r\n            return response.data;\r\n        }\r\n        throw new Error(\"Get item service returns null.\");\r\n    }\r\n    \r\n    public async createItem(item: IItem): Promise<void> {\r\n        const parseItem = _.pickBy(item, _.identity);\r\n        const response = await authorizedHttpClient.post<void, CreateItemPayload>(\r\n            APIEndPoints.item, { item: parseItem }\r\n        )\r\n        if(response) {\r\n            return Promise.resolve();\r\n        }\r\n        throw new Error(\"Get item service returns null.\");\r\n    }\r\n    \r\n    public async editItem(item: IItem): Promise<void> {\r\n        const response = await authorizedHttpClient.put(\r\n            APIEndPoints.item, { item }\r\n        )\r\n        if(response) {\r\n            return Promise.resolve();\r\n        }\r\n        throw new Error(\"Get item service returns null.\");\r\n    }\r\n    \r\n    public async deleteItem(item: IItem): Promise<void> {\r\n        console.log(`${APIEndPoints.item}/${item.id}`);\r\n        await authorizedHttpClient.delete(\r\n            `${APIEndPoints.item}?id=${item.id}`\r\n        )\r\n        return Promise.resolve();\r\n    }\r\n    \r\n    public async createItems(items: IItem[]): Promise<void> {\r\n        const response = await authorizedHttpClient.post<void, CreateItemsPayload>(\r\n            APIEndPoints.item, { items }, { timeout: 100000 }\r\n        )\r\n        if(response) {\r\n            return Promise.resolve();\r\n        }\r\n        throw new Error(\"Get item service returns null.\");\r\n    }\r\n}\r\n\r\nexport default new ItemService();\r\n","import React, { useEffect, useReducer, useState } from 'react';\r\nimport { IItem } from '../model/item';\r\nimport { Image } from 'antd';\r\nimport './itemImg.css';\r\n\r\nconst imageToBase64 = require('image-to-base64');\r\n\r\ninterface ItemImgProps {\r\n    itemImageSrc: string;\r\n    selectItemHandler?: (selectedItem: IItem, remove?: boolean) => void\r\n}\r\n\r\nconst ItemImgSrc: React.FC<ItemImgProps> = React.forwardRef(({ itemImageSrc, selectItemHandler }): React.ReactElement => {\r\n    // start item as preview\r\n    const [itemSrc, setItemSrc] = useState(itemImageSrc);\r\n\r\n    useEffect(() => {\r\n        // if local data is empty, call requets\r\n        //if (!dataImage) saveImgURL();\r\n    }, []);\r\n\r\n    const onLoaded = (e: any) => {\r\n        return itemSrc\r\n    }\r\n\r\n    //call request \r\n    const toDataURL = (url: string, callback: any) => {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open('GET', url);\r\n        xhr.setRequestHeader(\"Access-Control-Allow-Origin\", \"*\");\r\n        xhr.onload = function () {\r\n            const reader = new FileReader();\r\n            reader.onloadend = function () {\r\n                callback(reader.result);\r\n            }\r\n            reader.readAsDataURL(xhr.response);\r\n        };\r\n        xhr.responseType = 'blob';\r\n        xhr.send();\r\n    }\r\n\r\n\r\n    return (\r\n        <Image\r\n            wrapperStyle={{ minHeight: 80 }}\r\n            onLoad={onLoaded}\r\n            loading=\"lazy\"\r\n            src={itemSrc}\r\n            preview={false}\r\n/>\r\n    );\r\n});\r\n\r\nexport default ItemImgSrc;\r\n","import { Modal, Form, Input, InputNumber, Button } from 'antd';\r\nimport { ModalProps, ModalFuncProps } from 'antd/lib/modal';\r\nimport { formatCountdown } from 'antd/lib/statistic/utils';\r\nimport React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { IItem } from '../model/item';\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\n\r\n/* eslint-disable no-template-curly-in-string */\r\nconst validateMessages = {\r\n    required: '${label} is required!',\r\n    types: {\r\n        email: '${label} is not a valid email!',\r\n        number: '${label} is not a valid number!',\r\n    },\r\n    number: {\r\n        range: '${label} must be greater than ${min}',\r\n    },\r\n};\r\n/* eslint-enable no-template-curly-in-string */\r\ninterface ItemModalProps extends ModalProps {\r\n    item: IItem | undefined;\r\n    handleOk: (item: IItem) => void;\r\n    handleCancel: () => void;\r\n}\r\n\r\nconst ItemModal: React.FC<ItemModalProps> = (props) => {\r\n    const [form] = Form.useForm();\r\n\r\n    const { visible, handleOk, confirmLoading, handleCancel, item } = props;\r\n    const [modalItem, setModalItem] = useState(item);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(item);\r\n        form.setFields([\r\n            { name: \"id\", value: item?.id },\r\n            { name: \"name\", value: item?.name },\r\n            { name: \"description\", value: item?.description },\r\n            { name: \"quantity\", value: item?.quantity },\r\n            { name: \"imageSrc\", value: item?.imageSrc },\r\n        ])\r\n        console.log(form.getFieldsValue());\r\n    }, [item])\r\n    \r\n    const onFinish = (values: any) => {\r\n        console.log(form.getFieldsValue());\r\n        handleOk(form.getFieldsValue());\r\n        console.log(values);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form {...layout} form={form} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\r\n                <Modal\r\n                    title={`Editing ${item?.name}`}\r\n                    visible={visible}\r\n                    onOk={onFinish}\r\n                    confirmLoading={confirmLoading}\r\n                    onCancel={handleCancel}\r\n                >\r\n                    <Form.Item name={['id']} hidden={true} label=\"id\">\r\n                        <Input value={item?.id} />\r\n                    </Form.Item>\r\n                    <Form.Item name={['name']} label=\"Name\" rules={[{ required: true }]}>\r\n                        <Input value={item?.name} />\r\n                    </Form.Item>\r\n                    <Form.Item name={['quantity']} label=\"Quantity\" rules={[{ type: 'number', min: 0 }]}>\r\n                        <InputNumber />\r\n                    </Form.Item>\r\n                    <Form.Item name={['description']} label=\"Description\">\r\n                        <Input.TextArea size=\"large\" />\r\n                    </Form.Item>\r\n                    <Form.Item name={['imageSrc']} label=\"Image URL\">\r\n                        <Input />\r\n                    </Form.Item>\r\n                </Modal>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ItemModal;","import { Table, Tag, Space, Button } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport { IItem } from '../model/item';\r\nimport { useItemContext } from '../state/item/context';\r\nimport useQueryPagingStatus, { PageParam } from '../state/pagequery/page';\r\nimport ItemService from '../api/item-service';\r\nimport ItemImgSrc from './itemImgSrc';\r\nimport ItemModal from './itemModal';\r\n\r\n\r\n\r\ninterface ItemTableProps {\r\n  itemList: IItem[];\r\n  isEditable?: boolean;\r\n}\r\n\r\nconst initialPageParam = {\r\n  index: 0,\r\n  size: 100,\r\n  count: 0,\r\n}\r\n\r\n\r\nexport const ItemTable: React.FC<ItemTableProps> = ({ itemList }) => {\r\n  const itemContext = useItemContext();\r\n  const { pageIndex, pageSize, pageCount, setPageIndex, setPageSize, setPageCount } = useQueryPagingStatus(initialPageParam);\r\n  const [firstLoad, setFirstLoad] = useState(true);\r\n  const [hasMore, setHasMore] = useState(false);\r\n  const allItems: IItem[] = itemList;\r\n  const [items, setItems] = useState(allItems);\r\n  const [selectedItem, setSelectedItem] = useState<IItem | undefined>();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isAdd, setIsAdd] = useState(false);\r\n\r\n\r\n  const [visible, setVisible] = useState(false);\r\n  const [confirmLoading, setConfirmLoading] = useState(false);\r\n\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      render: (text: string) => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: 'Description',\r\n      dataIndex: 'description',\r\n      key: 'description',\r\n    },\r\n    {\r\n      title: 'Image',\r\n      dataIndex: 'imageSrc',\r\n      key: 'imageSrc',\r\n      render: (imageSrc: string) => (\r\n        <ItemImgSrc itemImageSrc={imageSrc}></ItemImgSrc>\r\n      )\r\n    },\r\n    {\r\n      title: 'Quantity',\r\n      key: 'quantity',\r\n      dataIndex: 'quantity',\r\n      sorter: (a: IItem, b: IItem) => a.quantity - b.quantity,\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (item: IItem) => (\r\n        <Space size=\"middle\">\r\n          <a onClick={() => showModal(item)}>Edit</a>\r\n          <a onClick={() => deleteItem(item)}>Delete</a>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const deleteItem = async (item: IItem) => {\r\n    await ItemService.deleteItem(item);\r\n    setItems((await ItemService.getItems()));\r\n  }\r\n\r\n  const showCreateModal = () => {\r\n    setIsAdd(true);\r\n    setSelectedItem(undefined);\r\n    setVisible(true);\r\n  }\r\n  \r\n  const showModal = (item: IItem) => {\r\n    setIsAdd(false);\r\n    setSelectedItem(item);\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = async (item: IItem) => {\r\n    setConfirmLoading(true);\r\n\r\n    try {      \r\n      // isAdd ? call item service create vs edit\r\n      if (isAdd)\r\n        await ItemService.createItem(item);\r\n      else \r\n        await ItemService.editItem(item);\r\n\r\n\r\n      setItems((await ItemService.getItems()));\r\n    } catch {\r\n      // catch error show error notification\r\n    }\r\n\r\n    setVisible(false);\r\n    setConfirmLoading(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log('Clicked cancel button');\r\n    setVisible(false);\r\n  };\r\n\r\n\r\n  const onLoadMore = async () => {\r\n    if (isLoading) return;\r\n    setIsLoading(true);\r\n    await ItemService.getItems()\r\n      .then((itemRes) => {\r\n        console.log(itemRes);\r\n        if (itemRes) {\r\n          setItems(itemRes);\r\n          setIsLoading(false);\r\n        }\r\n      }\r\n    );\r\n  }\r\n  const loadAllItems = () => {\r\n    const loadingItems: IItem[] = [];\r\n    for (let i = 0; i < itemContext.items.length; i++) {\r\n      const item = itemContext.items.pop();\r\n      if (!!item) {\r\n        loadingItems.push(item);\r\n      }\r\n    };\r\n    if (loadingItems.length) setItems([...items, ...loadingItems]);\r\n    setPageCount(pageCount + 1);\r\n  }\r\n\r\n  useEffect(() => {\r\n    // load item context\r\n    if (isLoading || hasMore || !firstLoad) return;\r\n    setFirstLoad(false);\r\n    onLoadMore();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (itemContext.items && itemContext.items.length > 0) setHasMore(false);\r\n    loadAllItems();\r\n  }, [itemContext]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" onClick={showCreateModal}>\r\n        Add\r\n      </Button>\r\n      <Table\r\n        columns={columns}\r\n        pagination={{ position: ['topLeft', 'bottomCenter'] }}\r\n        dataSource={items}\r\n      />\r\n      <ItemModal\r\n        item={selectedItem}\r\n        visible={visible}\r\n        handleOk={handleOk}\r\n        confirmLoading={confirmLoading}\r\n        handleCancel={handleCancel}></ItemModal>\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React, { CSSProperties, useState } from 'react';\r\nimport logo from '../../logo.svg';\r\nimport '../../App.css';\r\nimport { ItemListProvider } from '../../state/item/context';\r\nimport ItemInfiniteList from '../../component/itemInfiniteList';\r\nimport { Affix, Button, Col, Row } from 'antd';\r\nimport MainCarousel from '../../component/mainCarousel';\r\nimport { IItem } from '../../model/item';\r\nimport { ItemTable } from '../../component/itemTable';\r\nimport ItemModal from '../../component/itemModal';\r\n\r\nconst contentStyle: CSSProperties = {\r\n  height: '160px',\r\n  color: '#fff',\r\n  lineHeight: '160px',\r\n  textAlign: 'center',\r\n  background: '#364d79',\r\n};\r\n\r\nconst Main2: React.FC = () => {\r\n  const [ tags, setTags ] =  useState<number[]>([]);\r\n  const [ items, setItems ] =  useState<IItem[]>([]);\r\n\r\n\r\n\r\n  return (\r\n    <ItemListProvider>\r\n      <Row justify=\"center\">\r\n        <Col span=\"14\">\r\n          <ItemTable itemList={items}></ItemTable>\r\n        </Col>\r\n      </Row>\r\n    </ItemListProvider>\r\n  );\r\n}\r\n\r\nexport default Main2;","import React, { useEffect, useReducer, useState } from 'react';\r\nimport { IItem } from '../model/item';\r\nimport { Image } from 'antd';\r\nimport './itemImg.css';\r\n\r\nconst imageToBase64 = require('image-to-base64');\r\n\r\ninterface ItemImgProps {\r\n    item: IItem;\r\n    selectItemHandler?: (selectedItem: IItem, remove?: boolean) => void\r\n}\r\n\r\nconst ItemImg: React.FC<ItemImgProps> = React.forwardRef(({ item, selectItemHandler }): React.ReactElement => {\r\n    // start local data as locall data\r\n    const [dataImage, setDataImage] = useState(localStorage.getItem(item.id));\r\n    // start item as preview\r\n    const [itemSrc, setItemSrc] = useState(dataImage ? dataImage : item.imageSrc);\r\n\r\n    useEffect(() => {\r\n        // if local data is empty, call requets\r\n        //if (!dataImage) saveImgURL();\r\n    }, []);\r\n\r\n    const onLoaded = (e: any) => {\r\n        return item.imageSrc\r\n    }\r\n\r\n    //call request \r\n    const toDataURL = (url: string, callback: any) => {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open('GET', url);\r\n        xhr.setRequestHeader(\"Access-Control-Allow-Origin\", \"*\");\r\n        xhr.onload = function () {\r\n            const reader = new FileReader();\r\n            reader.onloadend = function () {\r\n                callback(reader.result);\r\n            }\r\n            reader.readAsDataURL(xhr.response);\r\n        };\r\n        xhr.responseType = 'blob';\r\n        xhr.send();\r\n    }\r\n\r\n    // call request to download image and store\r\n    const saveImgURL = () => {\r\n\r\n        //console.log(\"saving to cookie!\", item.imageSrc);\r\n        imageToBase64(item.imageSrc) // Image URL\r\n            .then(\r\n                (response: string) => {\r\n                    storeImgURL(\"data:image/png;base64,\" + response);\r\n                    setItemSrc(\"data:image/png;base64,\" + response);\r\n                }\r\n            )\r\n            .catch(\r\n                (error: any) => {\r\n                    //console.log(error); // Logs an error if there was one\r\n                }\r\n            )\r\n\r\n\r\n        // toDataURL(item.imageSrc, (dataUrl: any) => {\r\n        //     console.log('RESULT:', dataUrl)\r\n\r\n        //     storeImgURL(dataUrl);\r\n        //     setItemSrc(dataUrl)\r\n        // });\r\n    }\r\n\r\n    // when downloaded\r\n    const storeImgURL = (dataUrl: string) => {\r\n        localStorage.setItem(item.id, dataUrl)\r\n    }\r\n\r\n\r\n    return (\r\n        <Image\r\n            wrapperStyle={{ minHeight: 80 }}\r\n            onLoad={onLoaded}\r\n            loading=\"lazy\"\r\n            alt={item.name}\r\n            src={itemSrc}\r\n            preview={false}\r\n            onClick={(e) => {\r\n                // check class\r\n                if (selectItemHandler) {\r\n                    if (e.currentTarget.classList.contains(\"selected\")) {\r\n                        e.currentTarget.classList.remove(\"selected\");\r\n                        selectItemHandler(item, true);\r\n                    } else {\r\n                        e.currentTarget.classList.add(\"selected\");\r\n                        selectItemHandler(item);\r\n                    }\r\n                }\r\n                // add/remove class\r\n                // set/remove item from list\r\n            }}\r\n/>\r\n    );\r\n});\r\n\r\nexport default ItemImg;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { IItem } from '../model/item';\r\nimport { Button, Col, List, Row } from 'antd';\r\nimport { useItemContext } from '../state/item/context';\r\nimport ItemImg from './itemImg';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport * as CSS from 'csstype';\r\nimport ItemService from '../api/item-service';\r\nimport useQueryPagingStatus, { PageParam } from '../state/pagequery/page';\r\n\r\nconst itemListStyle: CSS.Properties = {\r\n    margin: \"auto\",\r\n    maxWidth: \"800px\"\r\n};\r\n\r\nconst initialPageParam = {\r\n    index: 0,\r\n    size: 100,\r\n    count: 0,\r\n}\r\ninterface ItemListProps {\r\n    itemList: IItem[];\r\n    tagList: number[];\r\n    isEditable?: boolean;\r\n}\r\n\r\nconst ItemInfiniteList: React.FC<ItemListProps> = ({itemList, tagList, isEditable=false}) => {\r\n    const itemContext = useItemContext();\r\n    const [firstLoad, setFirstLoad] = useState(true);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const { pageIndex, pageSize, pageCount, setPageIndex, setPageSize, setPageCount } = useQueryPagingStatus(initialPageParam);\r\n    \r\n\r\n    const allItems: IItem[] = itemList;\r\n    const allSelectedItems: IItem[] = [];\r\n    const [hasMore, setHasMore] = useState(false);\r\n    const [items, setItems] = useState(allItems);\r\n    const [tags, setTags] = useState(tagList);\r\n    const [selected, setSelected] = useState<any[]>([]);\r\n    const [selectedItems, setSelectedItems] = useState(allSelectedItems);\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n        // load item context\r\n        if(isLoading || hasMore || !firstLoad) return;\r\n        setFirstLoad(false);\r\n        onLoadMore();\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        if (itemContext.items && itemContext.items.length > 0) setHasMore(false);\r\n        loadAllItems();\r\n    }, [itemContext]);\r\n\r\n    useEffect(() => {\r\n        items.map((item, i) => {\r\n            //console.log(\"item: \", item);\r\n            setSelected([...selected, <Col span={4.5}><ItemImg item={ item } selectItemHandler={selectItemHandler} /></Col>]);\r\n        })        \r\n    }, [items]);\r\n\r\n\r\n    const loadAllItems = () => {\r\n        const loadingItems: IItem[] = [];\r\n        for (let i = 0; i < itemContext.items.length; i++) {\r\n            const item = itemContext.items.pop();\r\n            if (!!item) {\r\n                loadingItems.push(item);\r\n            }\r\n        };        \r\n        if (loadingItems.length) setItems([...items, ...loadingItems]);\r\n        setPageCount(pageCount + 1);\r\n    }\r\n\r\n    const onLoadMore = async () => {\r\n        if(isLoading) return;\r\n        setIsLoading(true);\r\n        const page: PageParam = {\r\n            count: pageCount,\r\n            index: pageIndex,\r\n            size: pageSize\r\n        }\r\n        await ItemService.getItemPaged(page)\r\n            .then((itemRes) => {\r\n                if(itemRes) {\r\n                    const { maxPages, rows } = itemRes;\r\n                    if (rows.length) {\r\n                        setHasMore(true);\r\n                        setItems([...items, ...rows]);\r\n                        setPageIndex(pageIndex + 1);\r\n                        setIsLoading(false);\r\n                    }\r\n                    if(maxPages <= pageIndex) {\r\n                        setHasMore(false);\r\n                    }\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    const selectItemHandler = async (selectedItem: IItem, remove = false) => {\r\n        if(remove) {\r\n            await setSelectedItems([ ...selectedItems.filter(item => item.id !== selectedItem.id) ]);\r\n        } else {\r\n            await setSelectedItems([ ...selectedItems, selectedItem ]);\r\n        }\r\n    }\r\n\r\n    const onClickHandler = () => {\r\n        console.log(\"selectItemHandler\", selectedItems);\r\n    }\r\n    const createItem = async (item: IItem) => {\r\n        await ItemService.createItem(item);\r\n    }       \r\n\r\n    const createItems = async (items: IItem[]) => {\r\n        await ItemService.createItems(items);\r\n    }       \r\n\r\n    //<CSVLoader createItems={createItems}/> \r\n    return (\r\n        <Row align=\"bottom\" justify=\"center\">\r\n            <Col>\r\n                <Row justify=\"center\">\r\n                    <Button hidden={!isEditable} onClick={onClickHandler}>hello</Button>\r\n                    <InfiniteScroll\r\n                        pageStart={0}\r\n                        loadMore={onLoadMore}\r\n                        hasMore={hasMore}\r\n                        loader={<div className=\"loader\" key={0}>Loading ...</div>}\r\n                    >\r\n                        <List\r\n                            grid={{\r\n                                column: 6,\r\n                                gutter: 0,\r\n                                xs: 2,\r\n                                sm: 2,\r\n                                md: 4,\r\n                                lg: 4,\r\n                                xl: 6,\r\n                                xxl: 6,\r\n                            }}\r\n                            style={itemListStyle}\r\n                            bordered={true}\r\n                            dataSource={items}\r\n                            renderItem={item => (\r\n                            <List.Item key={item.id}>\r\n                                <br />\r\n                                <br />\r\n                                <ItemImg item={item} selectItemHandler={selectItemHandler} />\r\n                                <br />\r\n                            </List.Item>\r\n                        )}\r\n                        >\r\n                        </List>\r\n                    </InfiniteScroll>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default ItemInfiniteList;\r\n","import { Carousel } from \"antd\";\r\nimport React, { CSSProperties } from \"react\";\r\n\r\nconst contentStyle: CSSProperties = {\r\n  minHeight: '420px',\r\n  color: '#fff',\r\n  lineHeight: '160px',\r\n  textAlign: 'center',\r\n  background: '#364d79',\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n};\r\n\r\nconst MainCarousel: React.FC = () => {\r\n  return (\r\n    <Carousel>\r\n      <div>\r\n        <h3 style={contentStyle}>Find the most fitting Steam badge for your profile</h3>\r\n      </div>\r\n    </Carousel>\r\n  );\r\n}\r\n\r\nexport default MainCarousel;\r\n","import React, { CSSProperties, useState } from 'react';\r\nimport logo from '../../logo.svg';\r\nimport '../../App.css';\r\nimport { ItemListProvider } from '../../state/item/context';\r\nimport ItemInfiniteList from '../../component/itemInfiniteList';\r\nimport { Affix, Button, Col, Row } from 'antd';\r\nimport MainCarousel from '../../component/mainCarousel';\r\nimport { IItem } from '../../model/item';\r\n\r\nconst contentStyle: CSSProperties = {\r\n  height: '160px',\r\n  color: '#fff',\r\n  lineHeight: '160px',\r\n  textAlign: 'center',\r\n  background: '#364d79',\r\n};\r\n\r\nconst Main: React.FC = () => {\r\n  const [ tags, setTags ] =  useState<number[]>([]);\r\n  const [ items, setItems ] =  useState<IItem[]>([]);\r\n\r\n  return (\r\n    <ItemListProvider>\r\n      <Row justify=\"center\">\r\n        <Col span=\"24\">\r\n          <MainCarousel></MainCarousel>\r\n        </Col>\r\n      </Row>\r\n      <Row justify=\"center\">\r\n        <Col span=\"14\">\r\n          <ItemInfiniteList tagList={tags} itemList={items}></ItemInfiniteList>\r\n        </Col>\r\n      </Row>\r\n    </ItemListProvider>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React, { CSSProperties, useState } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { IItem } from './model/item';\r\nimport { UIRouter, UIView, pushStateLocationPlugin } from '@uirouter/react';\r\nimport Main from './screen/main/Main';\r\nimport Main2 from './screen/main/Main2';\r\nimport { Layout, Menu, Breadcrumb, Row, Col } from 'antd';\r\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport Title from 'antd/lib/typography/Title';\r\nimport config from './config';\r\n\r\nconst contentStyle: CSSProperties = {\r\n  height: '160px',\r\n  color: '#fff',\r\n  lineHeight: '160px',\r\n  textAlign: 'center',\r\n  background: '#364d79',\r\n};\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\n\r\nconst states = [\r\n  {\r\n    name: 'Home',\r\n    url: '/',\r\n    component: Main,\r\n  },\r\n  {\r\n    name: 'Home2',\r\n    url: '/main',\r\n    component: Main2,\r\n  }\r\n]\r\n\r\nconst plugins = [pushStateLocationPlugin];\r\n\r\n\r\nconst App: React.FC = () => {\r\n  const [tags, setTags] = useState<number[]>([]);\r\n  const [badges, setItems] = useState<IItem[]>([]);\r\n\r\n  const [loggedIn, setLoggedIn] = useState(config.featureToggleOAUTHGoogle ? false : true);\r\n\r\n  const responseGoogleSuccess = (response: any) => {\r\n    setLoggedIn(true);\r\n    console.log(response);\r\n  }\r\n  const responseGoogleFailure = (response: any) => {\r\n    setLoggedIn(false);\r\n    console.log(response);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Layout hidden={loggedIn} style={{ height: \"100vh\", overflow: \"auto\" }}>\r\n        <Row  style={{ height: \"40vh\"}} align=\"bottom\" justify=\"center\">\r\n          <Col>\r\n            <Title>Google OAuth Login</Title>\r\n          </Col>\r\n        </Row>\r\n        <Row align=\"middle\" justify=\"center\">\r\n          <Col>\r\n            <GoogleLogin\r\n              clientId=\"414894711225-m92c5dgmq79i6mrfipjkhhpib12161fm.apps.googleusercontent.com\"\r\n              buttonText=\"Login\"\r\n              onSuccess={responseGoogleSuccess}\r\n              onFailure={responseGoogleFailure}\r\n              cookiePolicy={'single_host_origin'}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Layout>\r\n\r\n      <Layout hidden={!loggedIn}>\r\n        <Header className=\"header\">\r\n          <div className=\"logo\" />\r\n          <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\r\n            <Menu.Item key=\"1\">Main</Menu.Item>\r\n          </Menu>\r\n        </Header>\r\n        <Content style={{ padding: '0 50px' }}>\r\n          <Breadcrumb style={{ margin: '16px 0' }}>\r\n            <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n            <Breadcrumb.Item>List</Breadcrumb.Item>\r\n            <Breadcrumb.Item>App</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n          <Layout className=\"site-layout-background\" style={{ padding: '24px 0' }}>\r\n            <Sider className=\"site-layout-background\" width={200}>\r\n              <Menu\r\n                mode=\"inline\"\r\n                defaultSelectedKeys={['1']}\r\n                defaultOpenKeys={['sub1']}\r\n                style={{ height: '100%' }}\r\n              >\r\n                <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"subnav 1\">\r\n                  <Menu.Item key=\"1\">option1</Menu.Item>\r\n                  <Menu.Item key=\"2\">option2</Menu.Item>\r\n                  <Menu.Item key=\"3\">option3</Menu.Item>\r\n                  <Menu.Item key=\"4\">option4</Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu key=\"sub2\" icon={<LaptopOutlined />} title=\"subnav 2\">\r\n                  <Menu.Item key=\"5\">option5</Menu.Item>\r\n                  <Menu.Item key=\"6\">option6</Menu.Item>\r\n                  <Menu.Item key=\"7\">option7</Menu.Item>\r\n                  <Menu.Item key=\"8\">option8</Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu key=\"sub3\" icon={<NotificationOutlined />} title=\"subnav 3\">\r\n                  <Menu.Item key=\"9\">option9</Menu.Item>\r\n                  <Menu.Item key=\"10\">option10</Menu.Item>\r\n                  <Menu.Item key=\"11\">option11</Menu.Item>\r\n                  <Menu.Item key=\"12\">option12</Menu.Item>\r\n                </SubMenu>\r\n              </Menu>\r\n            </Sider>\r\n            <Content style={{ padding: '0 24px', minHeight: 280 }}>\r\n              <UIRouter plugins={plugins} states={states}>\r\n                <link rel='manifest' href=\"{{ asset('manifest.json') }}\" crossOrigin=\"use-credentials\"></link>\r\n                <UIView />\r\n              </UIRouter>\r\n            </Content>\r\n          </Layout>\r\n        </Content>\r\n        <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}